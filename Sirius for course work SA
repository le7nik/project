drop  DATABASE IF EXISTS Sirius;

CREATE DATABASE IF NOT EXISTS Sirius;

use Sirius;

CREATE TABLE users(
	id BIGINT UNSIGNED   AUTO_INCREMENT PRIMARY KEY,
	firstname VARCHAR(50) NOT NULL,
	lastname VARCHAR(50) NOT NULL,
	phone CHAR(11) NOT NULL,
	email VARCHAR(120) UNIQUE,
	password_hash CHAR(65) DEFAULT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	INDEX (lastname),
	INDEX (phone)
);

CREATE TABLE Notice (
	id SERIAL PRIMARY KEY,
	to_user_id BIGINT UNSIGNED NOT NULL,
	create_at DATETIME DEFAULT NOW(),
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	is_delievered BOOLEAN DEFAULT FALSE,
	FOREIGN KEY (to_user_id) REFERENCES users (id)	
);

CREATE TABLE DetailsNotice (
	id SERIAL PRIMARY KEY,
	to_user_id BIGINT UNSIGNED NOT NULL,
	head VARCHAR(150) NOT NULL,
	body TEXT,
	Task VARCHAR (150),
	responsible VARCHAR (150), 
	create_at DATETIME DEFAULT NOW(),
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	is_delievered BOOLEAN DEFAULT FALSE,
	FOREIGN KEY (id) REFERENCES notice (id)	
);

CREATE TABLE WebService (
	id SERIAL PRIMARY KEY,
	MicroserviceId CHAR(10) NOT NULL,
	MicroserviceName VARCHAR(50),
	Notice_Id VARCHAR (150),
	responsible VARCHAR (150), 
	send DATETIME DEFAULT NOW()		
);

CREATE TABLE NoticeMicroservice (
	id SERIAL PRIMARY KEY,
	to_user_id BIGINT UNSIGNED NOT NULL,
	New_Notes VARCHAR(150) NOT NULL,
	ALL_Notes VARCHAR(150) NOT NULL,
	Task VARCHAR (150),
	create_at DATETIME DEFAULT NOW(),
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	send BOOLEAN DEFAULT FALSE,
	FOREIGN KEY (id) REFERENCES notice (id)	
);

CREATE TABLE Logs (
	PRIMARY KEY(NoticeMicroservice_id, to_user_id),
	id CHAR(10),
	to_user_id BIGINT UNSIGNED NOT NULL,
	Notice_id BIGINT UNSIGNED NOT NULL,
	NoticeMicroservice_id VARCHAR(150) NOT NULL,
	send DATETIME DEFAULT NOW(),
	create_at DATETIME DEFAULT NOW(),
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
	);

CREATE TABLE Admin(
	id SERIAL PRIMARY KEY,
	firstname VARCHAR(50) NOT NULL,
	lastname VARCHAR(50) NOT NULL,
	phone CHAR(11) NOT NULL,
	email VARCHAR(120) UNIQUE,
	password_hash CHAR(65) DEFAULT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	INDEX (lastname),
	INDEX (phone),
	FOREIGN KEY (id) REFERENCES users (id)
);
